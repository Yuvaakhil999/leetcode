class Solution {
    public int depth(TreeNode root){
        if(root==null){
            return 0;
        }
        if(root.left!=null&&root.right!=null){
            return (1+Math.max(depth(root.left),depth(root.right)));
        }
        if(root.left!=null){
            return(1+depth(root.left));
        }
        return(1+depth(root.right));
    }
    public int diameterOfBinaryTree(TreeNode root) {
        if(root==null){
            return 0;
        }
        int a=depth(root.left);
        int b=depth(root.right);
        int k=(Math.max(diameterOfBinaryTree(root.left),diameterOfBinaryTree(root.right)));
        return Math.max(a+b,k);
    }
}
